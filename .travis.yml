language: go

go:
  - "1.12"
  - "1.13"
  - "1.14"
  - master

env:
  global:
    - REVIEW_DOG_ON=1.14
    - REVIEW_DOG_VERSION=0.9.17
    - GO111MODULE=on

branches:
  only:
    - master

install:
  - |
    if [ ${TRAVIS_GO_VERSION} == ${REVIEW_DOG_ON} ]; then
      mkdir -p ${GOPATH}/bin
      go get -u golang.org/x/lint/golint
      curl -sL https://github.com/reviewdog/reviewdog/releases/download/v${REVIEW_DOG_VERSION}/reviewdog_${REVIEW_DOG_VERSION}_Linux_x86_64.tar.gz \
        | tar xzfv - -C ${GOPATH}/bin
    fi
script:
  - go build ./...
  - |
    echo "Enable coverage report"
    TEST_ARG="-coverprofile=coverage.txt -covermode=atomic -coverpkg=all"
  - TEST_PKGS="$(go list ./... | grep -v "/examples/")"
  - |
    if [ ${TRAVIS_GO_VERSION} == "1.12" ]; then
      # Skip testing cmd to workaround https://github.com/golang/go/issues/30374
      TEST_PKGS="$(go list ./... | grep -v "/examples/" | grep -v "/cmd/")"
    fi
  - go test -v ${TEST_ARG} ${TEST_PKGS}
  - go vet ./...
  - |
    if [ ${TRAVIS_GO_VERSION} == ${REVIEW_DOG_ON} ]; then
      golint ./... | reviewdog -f=golint -reporter=github-pr-review
    fi
after_success:
  - bash <(curl -s https://codecov.io/bash)
